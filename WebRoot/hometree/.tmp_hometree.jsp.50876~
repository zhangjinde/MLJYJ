<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%@ taglib uri="/struts-tags" prefix="s"%>
<%
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
%>
<!DOCTYPE html>
<head>
	<base href="<%=basePath%>">
	<script src="js/jquery-1.9.1.min.js" type="text/javascript"></script>
    <meta charset="utf-8">
    <title>家印记圈子</title>
</head>
<body>
	
    <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
    <div id="main" style="height:800px">
    </div>
    <!-- ECharts单文件引入 -->
    <script src="js/echarts/echarts.js" type="text/javascript"></script>
    
    <script type="text/javascript">
        // 路径配置
        require.config({
            paths: {
                echarts: 'js/echarts'
            }
        });
        
        // 使用
        require(['echarts', 'echarts/chart/force' // 使用柱状图就加载bar模块，按需加载
        ], function(ec){
            // 基于准备好的dom，初始化echarts图表
            var myChart = ec.init(document.getElementById('main'));
            myChart.showLoading();
            $.post("/SSH2_MLJYJ/family/homeTree_getinfo", {um_id:1}, function(res, textStatus){
                if (textStatus == 'success') {
                    if (res != null) {
						
						
                        var option = eval('('+res+')');//动态调用
                       alert(res);
                        myChart.hideLoading();
                        // 为echarts对象加载数据 
                        myChart.setOption(option);
						
                        var ecConfig = require('echarts/config');
                        //设置点击事件
                        function focus(param){
                            var data = param.data;
                            var links = option.series[0].links;
                            var nodes = option.series[0].nodes;
                            if (data.source !== undefined &&
                            data.target !== undefined) { //点击的是边
                                var sourceNode = nodes.filter(function(n){
                                    return n.name == data.source
                                })[0];
                                var targetNode = nodes.filter(function(n){
                                    return n.name == data.target
                                })[0];
                                alert("选中了边 " + sourceNode.name + ' -> ' + targetNode.name + ' (' + data.weight + ')');
                            }
                            else { // 点击的是点
                                alert("选中了" + data.name + '(' + data.value + ')');
                            }
                        }
                        myChart.on(ecConfig.EVENT.CLICK, focus)
                        
                        myChart.on(ecConfig.EVENT.FORCE_LAYOUT_END, function(){
                            console.log(myChart.chart.force.getPosition());
                        });
                    }
                }
            });
            
        });
       
    </script>
    <button id="add">
        add
    </button>
    <script>
        $('#add').click(function(){
			alert("ok");
            var links = option.series[0].links;
            var nodes = option.series[0].nodes;
            
            var data = {
                category: 0,
                name: '测试',
                value: 10,
                label: '测试'
            };
            nodes.push(data);
            location.reload(false);
            
            
        });
    </script>
</body>
